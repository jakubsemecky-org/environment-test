name: Deployment

on:
  push:
    branches:
      - 'release/*'
      - 'main'
      - 'feature/*' # For testing the flow only @TODO delete this condition
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      task:
        type: choice
        description: Environment
        options:
          - Dev
          - Test

jobs:
  # Build Artifact
  build_call:
    runs-on: ubuntu-latest  # Must specify a runner
    id: build       # ID assigned to the JOB
    uses: ./.github/workflows/build-and-test-artifacts.yml
  # Deploy to DEV
  deploy-to-dev:
    needs: build
    runs-on: ubuntu-latest
    #if: github.ref == 'refs/heads/main'  # Only run on pushes to main
    environment:
      name: dev
      url: https://github.com
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
          
      - name: List Artifacts
        run: echo '${{ toJSON(needs) }}' | jq -r '.[].outputs | to_entries[] | .value'
          
      - name: Transcreation API - Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.transcreation_api_filename }}

      - name: Transcreation API - Unzip Artifact
        run: unzip -o ${{ needs.build.outputs.transcreation_api_filename }} -d packages/core/transcreation-api

      - name: Tracking API - Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.tracking_api_filename }}

      - name: Tracking API - Unzip Artifact
        run: mkdir -p packages/core/tracking-api/dist && unzip -o  ${{ needs.build.outputs.tracking_api_filename }} -d packages/core/tracking-api/dist

    #  - name: Login to Azure Subbscription
    #    uses: azure/login@v2
    #    with:
    #      client-id: ''
    #      tenant-id: ''
    #      subscription-id: ''
    #
    #  - name: Azure Web App Deploy (Dev)
    #    id: deploy-to-webapp
    #    uses: azure/webapps-deploy@v3
    #    with:
    #      app-name: your-app-name-dev # Replace with your Azure App Service name
    #      package: dev-artifact-${{ steps.version.outputs.version }}.zip
    #      slot-name: 'Production'
         

# save-github-release:
#   needs: deploy-to-dev
#   runs-on: ubuntu-latest
#   permissions:
#     contents: write # Required to create releases
#   steps:
#     - uses: actions/checkout@v4
#     - name: Create Release
#       id: create_release # Important: give this step an ID
#       uses: actions/create-release@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use the built-in GITHUB_TOKEN secret
#       with:
#         tag_name: $(date +%Y%m%d)
#         release_name: Release $(date +%Y%m%d)
#         body: |
#           Released:
#           - Tracking API
#           - Transcreation API
#         draft: false
#         prerelease: false
#     
#     - name: Upload Release Asset
#       id: upload-release-asset
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }} # Use the upload URL from the previous step
#         asset_path: ${{ needs.build-and-test-artifacts.outputs.tracking_api_filename }} # Path to your zip file
#         asset_name: ${{ needs.build-and-test-artifacts.outputs.tracking_api_filename }} # Name of the asset in the release
#         asset_content_type: application/zip # Set the content type